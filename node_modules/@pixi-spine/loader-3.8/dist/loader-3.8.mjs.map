{"version":3,"file":"loader-3.8.mjs","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable spaced-comment */\r\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\r\n/// <reference path=\"../global.d.ts\" />\r\n\r\nimport '@pixi-spine/loader-base'; // Side effect install atlas loader\r\n// eslint-disable-next-line @typescript-eslint/no-duplicate-imports\r\nimport { ISpineResource, SpineLoaderAbstract } from '@pixi-spine/loader-base';\r\nimport type { ISkeletonParser, TextureAtlas } from '@pixi-spine/base';\r\nimport { AtlasAttachmentLoader, SkeletonBinary, SkeletonData, SkeletonJson } from '@pixi-spine/runtime-3.8';\r\n\r\n/**\r\n * @internal\r\n */\r\nclass SpineParser extends SpineLoaderAbstract<SkeletonData> {\r\n    createBinaryParser(): ISkeletonParser {\r\n        return new SkeletonBinary(null);\r\n    }\r\n\r\n    createJsonParser(): ISkeletonParser {\r\n        return new SkeletonJson(null);\r\n    }\r\n\r\n    parseData(parser: ISkeletonParser, atlas: TextureAtlas, dataToParse: any): ISpineResource<SkeletonData> {\r\n        const parserCast = parser as SkeletonBinary | SkeletonJson;\r\n\r\n        parserCast.attachmentLoader = new AtlasAttachmentLoader(atlas);\r\n\r\n        return {\r\n            spineData: parserCast.readSkeletonData(dataToParse),\r\n            spineAtlas: atlas,\r\n        };\r\n    }\r\n}\r\n\r\nnew SpineParser().installLoader();\r\n"],"names":["SpineParser","SpineLoaderAbstract","SkeletonBinary","SkeletonJson","parser","atlas","dataToParse","parserCast","AtlasAttachmentLoader"],"mappings":";;;;;;;;uKAaA,MAAMA,UAAoBC,CAAkC,CACxD,oBAAsC,CAClC,OAAO,IAAIC,EAAe,IAAI,CAClC,CAEA,kBAAoC,CAChC,OAAO,IAAIC,EAAa,IAAI,CAChC,CAEA,UAAUC,EAAyBC,EAAqBC,EAAgD,CACpG,MAAMC,EAAaH,EAEnB,OAAAG,EAAW,iBAAmB,IAAIC,EAAsBH,CAAK,EAEtD,CACH,UAAWE,EAAW,iBAAiBD,CAAW,EAClD,WAAYD,CAChB,CACJ,CACJ,CAEA,IAAIL,IAAc,cAAc"}