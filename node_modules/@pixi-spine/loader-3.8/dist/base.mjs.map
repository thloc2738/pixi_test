{"version":3,"file":"base.mjs","sources":["../src/index.ts"],"sourcesContent":["/* eslint-disable spaced-comment */\n// eslint-disable-next-line @typescript-eslint/triple-slash-reference\n/// <reference path=\"../global.d.ts\" />\nimport { AbstractSpineParser } from '@pixi-spine/loader-base';\nimport type { ISkeletonParser, TextureAtlas } from '@pixi-spine/base';\nimport { LoaderResource, Loader } from '@pixi/loaders';\nimport { AtlasAttachmentLoader, SkeletonBinary, SkeletonJson } from '@pixi-spine/runtime-3.8';\n\n/**\n * @public\n */\nexport class SpineParser extends AbstractSpineParser {\n    createBinaryParser(): ISkeletonParser {\n        return new SkeletonBinary(null);\n    }\n\n    createJsonParser(): ISkeletonParser {\n        return new SkeletonJson(null);\n    }\n\n    parseData(resource: LoaderResource, parser: ISkeletonParser, atlas: TextureAtlas, dataToParse: any): void {\n        const parserCast = parser as SkeletonBinary | SkeletonJson;\n\n        parserCast.attachmentLoader = new AtlasAttachmentLoader(atlas);\n        resource.spineData = parserCast.readSkeletonData(dataToParse);\n        resource.spineAtlas = atlas;\n    }\n\n    static use = new SpineParser().genMiddleware().use;\n\n    static registerLoaderPlugin() {\n        Loader.registerPlugin(SpineParser);\n    }\n}\n"],"names":["_SpineParser","AbstractSpineParser","SkeletonBinary","SkeletonJson","resource","parser","atlas","dataToParse","parserCast","AtlasAttachmentLoader","Loader","SpineParser"],"mappings":";;;;;;;;8MAWO,MAAMA,EAAN,cAA0BC,CAAoB,CACjD,oBAAsC,CAClC,OAAO,IAAIC,EAAe,IAAI,CAClC,CAEA,kBAAoC,CAChC,OAAO,IAAIC,EAAa,IAAI,CAChC,CAEA,UAAUC,EAA0BC,EAAyBC,EAAqBC,EAAwB,CACtG,MAAMC,EAAaH,EAEnBG,EAAW,iBAAmB,IAAIC,EAAsBH,CAAK,EAC7DF,EAAS,UAAYI,EAAW,iBAAiBD,CAAW,EAC5DH,EAAS,WAAaE,CAC1B,CAIA,OAAO,sBAAuB,CAC1BI,EAAO,eAAeV,CAAW,CACrC,CACJ,EAtBa,IAAAW,EAANX,EAAMW,EAiBF,IAAM,IAAIX,IAAc,cAAgB,EAAA"}